- name: Deploy a a web application
  hosts: db_and_web_server1, db_and_web_server2
  become: yes
  vars:
    mysql_root_pwd: Doc9ment
  tasks:
    - name: Update apt repo and chache
      become: yes
      apt:
        update_cache: true
        force_apt_get: true
        cache_valid_time: 3600
    
    - name: Upgrade all packages
      become: yes
      apt: 
        upgrade: "dist"
        force_apt_get: true

    - name: Check if a reboot is needed
      register: reboot_required_file
      stat: path=/var/run/rwboot_required_file get_md5=no
    - name: Reboot the box if kernel updated
      reboot:
        msg: "Reboot initiated by Ansible for kernel updates"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists

    - name: Install all required dependencies
      become: yes
      apt:
        pkg:
          - python3
          - python3-setuptools
          - python3-dev
          - build-essential
          - python3-pip
          - python3-mysqldb
          - default-libmysqlclient-dev
          - python3-virtualenv
        state: present
      
    - name: Install mySQL server
      become: yes
      apt:
        pkg:
          - mysql-server
          - mysql-client
          - pkg-config
    
    - name: Start database service
      shell: "service mysql start"

    - name: ensure mysql is enabled to run on startup
      service: name=mysql state=started enabled=true

    - name: Create application database
      become: yes
      mysql_db:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: employee_db
        state: present
    
    - name: Create database users
      mysql_user:
        login_unix_socket: /var/run/mysqld/mysqld.sock
        name: db_user
        password: Passw0rd
        login_user: root
        login_password: Passw0rd
        priv: '*.*:ALL'
        host: '%'
        state: present
    
    - name: Install pip3
      pip:
        name:pip
        extra_args: --upgrade
        executable: pip3

    - name: Install Python Flask dependency
      pip3:
        name: "{{ item }}"
        state: present
      with_items:
        # - virtualenv
        - flask
        # - flask-mysql
        - flask-mysqldb

    - name: Copy source code
      copy: src=app.py dest=/opt/app.py
      #copy: src=app1.py dest=/opt/app1.py

    - name: Start Web Server
      shell: FLASK_APP=/opt/app.py nohup flask run --host=0.0.0.0 &
  

